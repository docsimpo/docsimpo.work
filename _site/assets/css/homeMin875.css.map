{
	"version": 3,
	"file": "homeMin875.css",
	"sources": [
		"homeMin875.scss",
		"_sass/bourbon/_bourbon.scss",
		"_sass/bourbon/bourbon/helpers/_buttons-list.scss",
		"_sass/bourbon/bourbon/helpers/_scales.scss",
		"_sass/bourbon/bourbon/helpers/_text-inputs-list.scss",
		"_sass/bourbon/bourbon/settings/_settings.scss",
		"_sass/bourbon/bourbon/validators/_contains.scss",
		"_sass/bourbon/bourbon/validators/_contains-falsy.scss",
		"_sass/bourbon/bourbon/validators/_is-color.scss",
		"_sass/bourbon/bourbon/validators/_is-length.scss",
		"_sass/bourbon/bourbon/validators/_is-number.scss",
		"_sass/bourbon/bourbon/validators/_is-size.scss",
		"_sass/bourbon/bourbon/utilities/_assign-inputs.scss",
		"_sass/bourbon/bourbon/utilities/_compact-shorthand.scss",
		"_sass/bourbon/bourbon/utilities/_directional-property.scss",
		"_sass/bourbon/bourbon/utilities/_fetch-bourbon-setting.scss",
		"_sass/bourbon/bourbon/utilities/_font-source-declaration.scss",
		"_sass/bourbon/bourbon/utilities/_gamma.scss",
		"_sass/bourbon/bourbon/utilities/_lightness.scss",
		"_sass/bourbon/bourbon/utilities/_contrast-ratio.scss",
		"_sass/bourbon/bourbon/utilities/_unpack-shorthand.scss",
		"_sass/bourbon/bourbon/library/_border-color.scss",
		"_sass/bourbon/bourbon/library/_border-radius.scss",
		"_sass/bourbon/bourbon/library/_border-style.scss",
		"_sass/bourbon/bourbon/library/_border-width.scss",
		"_sass/bourbon/bourbon/library/_buttons.scss",
		"_sass/bourbon/bourbon/library/_clearfix.scss",
		"_sass/bourbon/bourbon/library/_contrast-switch.scss",
		"_sass/bourbon/bourbon/library/_ellipsis.scss",
		"_sass/bourbon/bourbon/library/_font-face.scss",
		"_sass/bourbon/bourbon/library/_font-stacks.scss",
		"_sass/bourbon/bourbon/library/_hide-text.scss",
		"_sass/bourbon/bourbon/library/_hide-visually.scss",
		"_sass/bourbon/bourbon/library/_margin.scss",
		"_sass/bourbon/bourbon/library/_modular-scale.scss",
		"_sass/bourbon/bourbon/library/_overflow-wrap.scss",
		"_sass/bourbon/bourbon/library/_padding.scss",
		"_sass/bourbon/bourbon/library/_position.scss",
		"_sass/bourbon/bourbon/library/_prefixer.scss",
		"_sass/bourbon/bourbon/library/_shade.scss",
		"_sass/bourbon/bourbon/library/_size.scss",
		"_sass/bourbon/bourbon/library/_strip-unit.scss",
		"_sass/bourbon/bourbon/library/_text-inputs.scss",
		"_sass/bourbon/bourbon/library/_timing-functions.scss",
		"_sass/bourbon/bourbon/library/_tint.scss",
		"_sass/bourbon/bourbon/library/_triangle.scss",
		"_sass/bourbon/bourbon/library/_value-prefixer.scss",
		"_sass/variable.scss",
		"_sass/body.scss",
		"_sass/class.scss",
		"_sass/headerMin875.scss",
		"_sass/homeContentMin875.scss",
		"_sass/footerMin875.scss"
	],
	"sourcesContent": [
		"@import \"bourbon/bourbon\";\n@import 'variable.scss';\n@import 'body.scss';\n@import 'class.scss';\n@import 'headerMin875.scss';\n@import 'homeContentMin875.scss';\n@import \"footerMin875.scss\";",
		"// Bourbon 7.0.0\n// https://www.bourbon.io/\n// Copyright 2011-2020 thoughtbot, inc.\n// MIT License\n\n@import \"bourbon/helpers/buttons-list\";\n@import \"bourbon/helpers/scales\";\n@import \"bourbon/helpers/text-inputs-list\";\n\n@import \"bourbon/settings/settings\";\n\n@import \"bourbon/validators/contains\";\n@import \"bourbon/validators/contains-falsy\";\n@import \"bourbon/validators/is-color\";\n@import \"bourbon/validators/is-length\";\n@import \"bourbon/validators/is-number\";\n@import \"bourbon/validators/is-size\";\n\n@import \"bourbon/utilities/assign-inputs\";\n@import \"bourbon/utilities/compact-shorthand\";\n@import \"bourbon/utilities/directional-property\";\n@import \"bourbon/utilities/fetch-bourbon-setting\";\n@import \"bourbon/utilities/font-source-declaration\";\n@import \"bourbon/utilities/gamma\";\n@import \"bourbon/utilities/lightness\";\n@import \"bourbon/utilities/contrast-ratio\";\n@import \"bourbon/utilities/unpack-shorthand\";\n\n@import \"bourbon/library/border-color\";\n@import \"bourbon/library/border-radius\";\n@import \"bourbon/library/border-style\";\n@import \"bourbon/library/border-width\";\n@import \"bourbon/library/buttons\";\n@import \"bourbon/library/clearfix\";\n@import \"bourbon/library/contrast-switch\";\n@import \"bourbon/library/ellipsis\";\n@import \"bourbon/library/font-face\";\n@import \"bourbon/library/font-stacks\";\n@import \"bourbon/library/hide-text\";\n@import \"bourbon/library/hide-visually\";\n@import \"bourbon/library/margin\";\n@import \"bourbon/library/modular-scale\";\n@import \"bourbon/library/overflow-wrap\";\n@import \"bourbon/library/padding\";\n@import \"bourbon/library/position\";\n@import \"bourbon/library/prefixer\";\n@import \"bourbon/library/shade\";\n@import \"bourbon/library/size\";\n@import \"bourbon/library/strip-unit\";\n@import \"bourbon/library/text-inputs\";\n@import \"bourbon/library/timing-functions\";\n@import \"bourbon/library/tint\";\n@import \"bourbon/library/triangle\";\n@import \"bourbon/library/value-prefixer\";\n",
		"@charset \"UTF-8\";\n\n/// A list of all HTML button elements.\n///\n/// @type list\n///\n/// @access private\n\n$_buttons-list: (\n  \"button\",\n  \"[type='button']\",\n  \"[type='reset']\",\n  \"[type='submit']\",\n);\n",
		"@charset \"UTF-8\";\n\n////\n/// Pre-defined scales for use with the `modular-scale` function.\n///\n/// @type number (unitless)\n///\n/// @see {function} modular-scale\n////\n\n$minor-second: 1.067;\n$major-second: 1.125;\n$minor-third: 1.2;\n$major-third: 1.25;\n$perfect-fourth: 1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth: 1.5;\n$minor-sixth: 1.6;\n$golden: 1.618;\n$major-sixth: 1.667;\n$minor-seventh: 1.778;\n$major-seventh: 1.875;\n$octave: 2;\n$major-tenth: 2.5;\n$major-eleventh: 2.667;\n$major-twelfth: 3;\n$double-octave: 4;\n",
		"@charset \"UTF-8\";\n\n/// A list of all _text-based_ HTML inputs.\n///\n/// @type list\n///\n/// @access private\n\n$_text-inputs-list: (\n  \"[type='color']\",\n  \"[type='date']\",\n  \"[type='datetime']\",\n  \"[type='datetime-local']\",\n  \"[type='email']\",\n  \"[type='month']\",\n  \"[type='number']\",\n  \"[type='password']\",\n  \"[type='search']\",\n  \"[type='tel']\",\n  \"[type='text']\",\n  \"[type='time']\",\n  \"[type='url']\",\n  \"[type='week']\",\n  \"input:not([type])\",\n  \"textarea\",\n);\n",
		"@charset \"UTF-8\";\n\n/// Default global Bourbon settings. Values in this map are overwritten by any\n/// values set in the `$bourbon` map.\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @access private\n\n$_bourbon-defaults: (\n  \"contrast-switch-dark-color\": #000,\n  \"contrast-switch-light-color\": #fff,\n  \"global-font-file-formats\": (\"woff2\", \"woff\"),\n  \"modular-scale-base\": 1em,\n  \"modular-scale-ratio\": $major-third,\n  \"rails-asset-pipeline\": false,\n);\n\n/// Global Bourbon settings.\n///\n/// @name Settings\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @example scss\n///   $bourbon: (\n///     \"contrast-switch-dark-color\": #000,\n///     \"contrast-switch-light-color\": #fff,\n///     \"global-font-file-formats\": (\"woff2\", \"woff\"),\n///     \"modular-scale-base\": 1em,\n///     \"modular-scale-ratio\": $major-third,\n///     \"rails-asset-pipeline\": false,\n///   );\n\n$bourbon: () !default;\n",
		"@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @argument {list} $values\n///   A single value or list of values to check for.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains(\n  $list,\n  $values...\n) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks if a list does not contain any values.\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS color.\n///\n/// @argument {string} $color\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-color($color) {\n  @return (type-of($color) == color) or ($color == \"currentColor\");\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-length($value) {\n  @return type-of($value) != \"null\"\n    and (\n      str-slice($value + \"\", 1, 4) == \"calc\"\n      or str-slice($value + \"\", 1, 3) == \"var\"\n      or str-slice($value + \"\", 1, 3) == \"env\"\n      or index(auto inherit initial 0, $value)\n      or (type-of($value) == \"number\" and not(unitless($value)))\n    );\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @argument {number} $value\n///\n/// @require {function} _contains\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-number($value) {\n  @return _contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @require {function} _contains\n///\n/// @require {function} _is-length\n///\n/// @access private\n\n@function _is-size($value) {\n  @return _is-length($value)\n    or _contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n",
		"@charset \"UTF-8\";\n\n/// Append pseudo-classes to a selector(s).\n///\n/// @argument {list | string} $inputs\n///   A selector, or list of selectors, to apply the pseudo-class to.\n///\n/// @argument {pseudo-class} $pseudo [null]\n///   The pseudo-class to be appended.\n///\n/// @return {list}\n///\n/// @access private\n\n@function _assign-inputs(\n  $inputs,\n  $pseudo: null\n) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n",
		"@charset \"UTF-8\";\n\n/// Transforms shorthand to its shortest possible form.\n///\n/// @argument {list} $values\n///   List of directional values.\n///\n/// @example scss\n///   $values: _compact-shorthand(10px 20px 10px 20px);\n///\n///   // Output\n///   $values: 10px 20px;\n///\n/// @return {list}\n///\n/// @access private\n\n@function _compact-shorthand($values) {\n  $output: null;\n\n  $a: nth($values, 1);\n  $b: if(length($values) < 2, $a, nth($values, 2));\n  $c: if(length($values) < 3, $a, nth($values, 3));\n  $d: if(length($values) < 2, $a, nth($values, if(length($values) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d {\n    $output: $a;\n  } @else if $a == $c and $b == $d {\n    $output: $a $b;\n  } @else if $b == $d {\n    $output: $a $b $c;\n  } @else {\n    $output: $a $b $c $d;\n  }\n\n  @return $output;\n}\n",
		"@charset \"UTF-8\";\n\n/// Builds directional properties by parsing CSS shorthand values. For example,\n/// a value of `10px null` will output top and bottom directional properties,\n/// but the `null` skips left and right from being output.\n///\n/// @argument {string} $property\n///   Base property.\n///\n/// @argument {string} $suffix\n///   Suffix to append. Use `null` to omit.\n///\n/// @argument {list} $values\n///   List of values to set for the property.\n///\n/// @example scss\n///   .element {\n///     @include _directional-property(border, width, null 5px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-right-width: 5px;\n///     border-left-width: 5px;\n///   }\n///\n/// @require {function} _compact-shorthand\n///\n/// @require {function} _contains-falsy\n///\n/// @access private\n\n@mixin _directional-property(\n  $property,\n  $suffix,\n  $values\n) {\n  $top: $property + \"-top\" + if($suffix, \"-#{$suffix}\", \"\");\n  $bottom: $property + \"-bottom\" + if($suffix, \"-#{$suffix}\", \"\");\n  $left: $property + \"-left\" + if($suffix, \"-#{$suffix}\", \"\");\n  $right: $property + \"-right\" + if($suffix, \"-#{$suffix}\", \"\");\n  $all: $property + if($suffix, \"-#{$suffix}\", \"\");\n\n  $values: _compact-shorthand($values);\n\n  @if _contains-falsy($values) {\n    @if nth($values, 1) { #{$top}: nth($values, 1); }\n\n    @if length($values) == 1 {\n      @if nth($values, 1) { #{$right}: nth($values, 1); }\n    } @else {\n      @if nth($values, 2) { #{$right}: nth($values, 2); }\n    }\n\n    @if length($values) == 2 {\n      @if nth($values, 1) { #{$bottom}: nth($values, 1); }\n      @if nth($values, 2) { #{$left}: nth($values, 2); }\n    } @else if length($values) == 3 {\n      @if nth($values, 3) { #{$bottom}: nth($values, 3); }\n      @if nth($values, 2) { #{$left}: nth($values, 2); }\n    } @else if length($values) == 4 {\n      @if nth($values, 3) { #{$bottom}: nth($values, 3); }\n      @if nth($values, 4) { #{$left}: nth($values, 4); }\n    }\n  } @else {\n    #{$all}: $values;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Return a Bourbon setting.\n///\n/// @argument {string} $setting\n///\n/// @return {boolean | color | list | number | string}\n///\n/// @example scss\n///   _fetch-bourbon-setting(rails-asset-pipeline)\n///\n/// @access private\n\n@function _fetch-bourbon-setting($setting) {\n  @return map-get(map-merge($_bourbon-defaults, $bourbon), $setting);\n}\n",
		"@charset \"UTF-8\";\n\n/// Builds the `src` list for an `@font-face` declaration.\n///\n/// @link https://goo.gl/Ru1bKP\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {boolean} $asset-pipeline\n///\n/// @argument {list} $file-formats\n///\n/// @return {list}\n///\n/// @require {function} _contains\n///\n/// @access private\n\n@function _font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats\n) {\n  $src: ();\n\n  $formats-map: (\n    \"woff2\": \"#{$file-path}.woff2\" format(\"woff2\"),\n    \"woff\": \"#{$file-path}.woff\" format(\"woff\"),\n  );\n\n  @each $format in $file-formats {\n    @if _contains(map-keys($formats-map), $format) {\n      $value: map-get($formats-map, $format);\n      $file-path: nth($value, 1);\n      $font-format: nth($value, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    } @else {\n      @error \"`#{$file-formats}` contains an unsupported font file format. \" +\n        \"Must be `woff` and/or `woff2`.\";\n    }\n  }\n\n  @return $src;\n}\n",
		"@charset \"UTF-8\";\n\n/// Performs gamma correction on a single color channel.\n///\n/// Note that the calculation is approximate if a `pow()` is not available.\n///\n/// @argument {number (0-1)} $channel\n///\n/// @return {number (0-1)}\n///\n/// @access private\n\n@function _gamma($channel) {\n  @if $channel < 0.03928 {\n    @return $channel / 12.92;\n  } @else {\n    $c: ($channel + 0.055) / 1.055;\n    @if function-exists(\"pow\") {\n      @return pow($c, 2.4);\n    } @else {\n      @return 0.56 * $c * $c * $c + 0.44 * $c * $c;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Programatically determines the lightness of a color.\n///\n/// @argument {color (hex)} $hex-color\n///\n/// @return {number (0-1)}\n///\n/// @example scss\n///   _lightness($color)\n///\n/// @access private\n\n@function _lightness($hex-color) {\n  $-local-red-raw: red(rgba($hex-color, 1));\n  $-local-green-raw: green(rgba($hex-color, 1));\n  $-local-blue-raw: blue(rgba($hex-color, 1));\n\n  $-local-red: _gamma($-local-red-raw / 255);\n  $-local-green: _gamma($-local-green-raw / 255);\n  $-local-blue: _gamma($-local-blue-raw / 255);\n\n  @return $-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722;\n}\n",
		"@charset \"UTF-8\";\n\n/// Programatically determines the contrast ratio between two colors.\n///\n/// Note that the alpha channel is ignored.\n///\n/// @link https://goo.gl/54htLV\n///\n/// @argument {color (hex)} $color-1\n///\n/// @argument {color (hex)} $color-2\n///\n/// @return {number (1-21)}\n///\n/// @example scss\n///   _contrast-ratio(black, white)\n///\n/// @require {function} _lightness\n///\n/// @access private\n\n@function _contrast-ratio($color-1, $color-2) {\n  $-local-lightness-1: _lightness($color-1) + 0.05;\n  $-local-lightness-2: _lightness($color-2) + 0.05;\n\n  @if $-local-lightness-1 > $-local-lightness-2 {\n    @return $-local-lightness-1 / $-local-lightness-2;\n  } @else {\n    @return $-local-lightness-2 / $-local-lightness-1;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Transforms shorthand that can range from 1-to-4 values to be 4 values.\n///\n/// @argument {list} $shorthand\n///\n/// @example scss\n///   .element {\n///     margin: _unpack-shorthand(1em 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n///\n/// @access private\n\n@function _unpack-shorthand($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-color` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of colors; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-color($values) {\n  @include _directional-property(border, color, $values);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and top-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-top-radius(4px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-top-left-radius: 4px;\n///     border-top-right-radius: 4px;\n///   }\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-right and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-right-radius(3px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-right-radius: 3px;\n///     border-top-right-radius: 3px;\n///   }\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// bottom-left and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-bottom-radius(2px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 2px;\n///     border-bottom-right-radius: 2px;\n///   }\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and bottom-left of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-left-radius(1px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 1px;\n///     border-top-left-radius: 1px;\n///   }\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-style` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border styles; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-style($values) {\n  @include _directional-property(border, style, $values);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-width` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border widths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-width($values) {\n  @include _directional-property(border, width, $values);\n}\n",
		"@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_buttons-list\n////\n\n/// A list of all HTML button elements. Please note that you must interpolate\n/// the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   // CSS Output\n///   button,\n///   [type='button'],\n///   [type='reset'],\n///   [type='submit'] {\n///     background-color: #f00;\n///   }\n\n$all-buttons: _assign-inputs($_buttons-list);\n\n/// A list of all HTML button elements with the `:active` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n///   // CSS Output\n///   button:active,\n///   [type='button']:active,\n///   [type='reset']:active,\n///   [type='submit']:active {\n///     background-color: #00f;\n///   }\n\n$all-buttons-active: _assign-inputs($_buttons-list, active);\n\n/// A list of all HTML button elements with the `:focus` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-focus} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:focus,\n///   [type='button']:focus,\n///   [type='reset']:focus,\n///   [type='submit']:focus {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-focus: _assign-inputs($_buttons-list, focus);\n\n/// A list of all HTML button elements with the `:hover` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:hover,\n///   [type='button']:hover,\n///   [type='reset']:hover,\n///   [type='submit']:hover {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-hover: _assign-inputs($_buttons-list, hover);\n",
		"@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link https://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n///   // CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Switches between two colors based on the contrast to another color. It’s\n/// like a [ternary operator] for color contrast and can be useful for building\n/// a button system.\n///\n/// The calculation of the contrast ratio is based on the [WCAG 2.0\n/// specification]. However, we cannot guarantee full compliance, though all of\n/// our manual testing passed.\n///\n///   [ternary operator]: https://goo.gl/ccfLqi\n///   [WCAG 2.0 specification]: https://goo.gl/zhQuYA\n///\n/// @argument {color} $base-color\n///   The color to evaluate lightness against.\n///\n/// @argument {color} $dark-color [#000]\n///   The color to be output when `$base-color` is light. Can also be set\n///   globally using the `contrast-switch-dark-color` key in the\n///   Bourbon settings.\n///\n/// @argument {color} $light-color [#fff]\n///   The color to be output when `$base-color` is dark. Can also be set\n///   globally using the `contrast-switch-light-color` key in the\n///   Bourbon settings.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     color: contrast-switch(#bae6e6);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     color: #000;\n///   }\n///\n/// @example scss\n///   .element {\n///     $button-color: #2d72d9;\n///     background-color: $button-color;\n///     color: contrast-switch($button-color, #222, #eee);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #2d72d9;\n///     color: #eee;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n///\n/// @require {function} _is-color\n///\n/// @require {function} _contrast-ratio\n///\n/// @since 5.0.0\n\n@function contrast-switch(\n  $base-color,\n  $dark-color: _fetch-bourbon-setting(\"contrast-switch-dark-color\"),\n  $light-color: _fetch-bourbon-setting(\"contrast-switch-light-color\")\n) {\n  @if not _is-color($base-color) {\n    @error \"`#{$base-color}` is not a valid color for the `$base-color` \" +\n      \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($dark-color) {\n    @error \"`#{$dark-color}` is not a valid color for the `$dark-color` \" +\n      \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($light-color) {\n    @error \"`#{$light-color}` is not a valid color for the `$light-color` \" +\n      \"argument in the `contrast-switch` function.\";\n  } @else {\n    $-contrast-to-dark: _contrast-ratio($base-color, $dark-color);\n    $-contrast-to-light: _contrast-ratio($base-color, $light-color);\n    $-prefer-dark: $-contrast-to-dark >= $-contrast-to-light;\n\n    @return if($-prefer-dark, $dark-color, $light-color);\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @argument {number} $width [100%]\n///   The `max-width` for the string to respect before being truncated.\n///\n/// @argument {string} $display [inline-block]\n///   Sets the display-value of the element.\n///\n/// @example scss\n///   .element {\n///     @include ellipsis;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis(\n  $width: 100%,\n  $display: inline-block\n) {\n  display: $display;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates an `@font-face` declaration. You can choose the specific file\n/// formats you need to output; the mixin supports `woff2`\n/// and `woff`. The mixin also supports usage with the Rails Asset Pipeline,\n/// which you can enable per use, or globally in the `$bourbon()` settings.\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {string | list} $file-formats [(\"woff2\", \"woff\")]\n///   List of the font file formats to include. Can also be set globally using\n///   the `global-font-file-formats` key in the Bourbon settings.\n///\n/// @argument {boolean} $asset-pipeline [false]\n///   Set to `true` if you’re using the Rails Asset Pipeline (place the fonts\n///   in `app/assets/fonts/`). Can also be set globally using the\n///   `rails-asset-pipeline` key in the Bourbon settings.\n///\n/// @content\n///   Any additional CSS properties that are included in the `@include`\n///   directive will be output within the `@font-face` declaration, e.g. you can\n///   pass in `font-weight`, `font-style` and/or `unicode-range`.\n///\n/// @example scss\n///   @include font-face(\n///     \"source-sans-pro\",\n///     \"fonts/source-sans-pro-regular\",\n///     (\"woff2\", \"woff\")\n///   ) {\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n///   // CSS Output\n///   @font-face {\n///     font-family: \"source-sans-pro\";\n///     src: url(\"fonts/source-sans-pro-regular.woff2\") format(\"woff2\"),\n///          url(\"fonts/source-sans-pro-regular.woff\") format(\"woff\");\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n/// @require {function} _font-source-declaration\n///\n/// @require {function} _fetch-bourbon-setting\n\n@mixin font-face(\n  $font-family,\n  $file-path,\n  $file-formats: _fetch-bourbon-setting(\"global-font-file-formats\"),\n  $asset-pipeline: _fetch-bourbon-setting(\"rails-asset-pipeline\")\n) {\n  @font-face {\n    font-family: $font-family;\n    src: _font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats\n    );\n    @content;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// A variable that outputs a Helvetica font stack.\n///\n/// @link https://goo.gl/uSJvZe\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-helvetica;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n///   }\n\n$font-stack-helvetica: (\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Arial\",\n  sans-serif,\n);\n\n/// A variable that outputs a Lucida Grande font stack.\n///\n/// @link https://goo.gl/R5UyYE\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-lucida-grande;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Lucida Grande\", \"Lucida Sans Unicode\", \"Geneva\", \"Verdana\", sans-serif;\n///   }\n\n$font-stack-lucida-grande: (\n  \"Lucida Grande\",\n  \"Lucida Sans Unicode\",\n  \"Geneva\",\n  \"Verdana\",\n  sans-serif,\n);\n\n/// A variable that outputs a Verdana font stack.\n///\n/// @link https://goo.gl/yGXWSS\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-verdana;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Verdana\", \"Geneva\", sans-serif;\n///   }\n\n$font-stack-verdana: (\n  \"Verdana\",\n  \"Geneva\",\n  sans-serif,\n);\n\n/// A variable that outputs a system font stack.\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-system;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Avenir Next\", \"Avenir\", \"Segoe UI\", \"Lucida Grande\", \"Helvetica Neue\", \"Helvetica\", \"Fira Sans\", \"Roboto\", \"Noto\", \"Droid Sans\", \"Cantarell\", \"Oxygen\", \"Ubuntu\", \"Franklin Gothic Medium\", \"Century Gothic\", \"Liberation Sans\", sans-serif;\n///   }\n\n$font-stack-system: (\n  system-ui,\n  -apple-system,\n  BlinkMacSystemFont,\n  \"Avenir Next\",\n  \"Avenir\",\n  \"Segoe UI\",\n  \"Lucida Grande\",\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Fira Sans\",\n  \"Roboto\",\n  \"Noto\",\n  \"Droid Sans\",\n  \"Cantarell\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Franklin Gothic Medium\",\n  \"Century Gothic\",\n  \"Liberation Sans\",\n  sans-serif,\n);\n\n/// A variable that outputs a Garamond font stack.\n///\n/// @link https://goo.gl/QQFEkV\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-garamond;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Garamond\", \"Baskerville\", \"Baskerville Old Face\", \"Hoefler Text\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-garamond: (\n  \"Garamond\",\n  \"Baskerville\",\n  \"Baskerville Old Face\",\n  \"Hoefler Text\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Georgia font stack.\n///\n/// @link https://goo.gl/wtzVPy\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-georgia;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Georgia\", \"Times\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-georgia: (\n  \"Georgia\",\n  \"Times\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Hoefler Text font stack.\n///\n/// @link https://goo.gl/n7U7zx\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-hoefler-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Hoefler Text\", \"Baskerville Old Face\", \"Garamond\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-hoefler-text: (\n  \"Hoefler Text\",\n  \"Baskerville Old Face\",\n  \"Garamond\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Consolas font stack.\n///\n/// @link https://goo.gl/iKrtqv\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-consolas;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Consolas\", \"monaco\", monospace;\n///   }\n\n$font-stack-consolas: (\n  \"Consolas\",\n  \"monaco\",\n  monospace,\n);\n\n/// A variable that outputs a Courier New font stack.\n///\n/// @link https://goo.gl/bHfWMP\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-courier-new;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Courier New\", \"Courier\", \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace;\n///   }\n\n$font-stack-courier-new: (\n  \"Courier New\",\n  \"Courier\",\n  \"Lucida Sans Typewriter\",\n  \"Lucida Typewriter\",\n  monospace,\n);\n\n/// A variable that outputs a Monaco font stack.\n///\n/// @link https://goo.gl/9PgKDO\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-monaco;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Monaco\", \"Consolas\", \"Lucida Console\", monospace;\n///   }\n\n$font-stack-monaco: (\n  \"Monaco\",\n  \"Consolas\",\n  \"Lucida Console\",\n  monospace,\n);\n",
		"@charset \"UTF-8\";\n\n/// Hides the text in an element, commonly used to show an image instead. Some\n/// elements will need block-level styles applied.\n///\n/// @link https://goo.gl/EvLRIu\n///\n/// @example scss\n///   .element {\n///     @include hide-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n\n@mixin hide-text {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n}\n",
		"@charset \"UTF-8\";\n\n/// Hides an element visually while still allowing the content to be accessible\n/// to assistive technology, e.g. screen readers. Passing `unhide` will reverse\n/// the affects of the hiding, which is handy for showing the element on focus,\n/// for example.\n///\n/// @link https://goo.gl/Vf1TGn\n///\n/// @argument {string} $toggle [hide]\n///   Accepts `hide` or `unhide`. `unhide` reverses the affects of `hide`.\n///\n/// @example scss\n///   .element {\n///     @include hide-visually;\n///\n///     &:active,\n///     &:focus {\n///       @include hide-visually(\"unhide\");\n///     }\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border: 0;\n///     clip: rect(1px, 1px, 1px, 1px);\n///     clip-path: inset(100%);\n///     height: 1px;\n///     overflow: hidden;\n///     padding: 0;\n///     position: absolute;\n///     width: 1px;\n///   }\n///\n///   .hide-visually:active,\n///   .hide-visually:focus {\n///     clip: auto;\n///     clip-path: none;\n///     height: auto;\n///     overflow: visible;\n///     position: static;\n///     width: auto;\n///   }\n///\n/// @since 5.0.0\n\n@mixin hide-visually($toggle: \"hide\") {\n  @if not index(\"hide\" \"unhide\", $toggle) {\n    @error \"`#{$toggle}` is not a valid value for the `$toggle` argument in \" +\n      \"the `hide-visually` mixin. Must be either `hide` or `unhide`.\";\n  } @else if $toggle == \"hide\" {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  } @else if $toggle == \"unhide\" {\n    clip: auto;\n    clip-path: none;\n    height: auto;\n    overflow: visible;\n    position: static;\n    white-space: inherit;\n    width: auto;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `margin` on specific edges\n/// of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of margin values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include margin(null auto);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include margin(10px 3em 20vh null);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-bottom: 20vh;\n///     margin-right: 3em;\n///     margin-top: 10px;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin margin($values) {\n  @include _directional-property(margin, null, $values);\n}\n",
		"@charset \"UTF-8\";\n\n/// Increments up or down a defined scale and returns an adjusted value. This\n/// helps establish consistent measurements and spacial relationships throughout\n/// your project. We provide a list of commonly used scales as\n/// [pre-defined variables][scales].\n///\n/// [scales]: https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/helpers/_scales.scss\n///\n/// @argument {number (unitless)} $increment\n///   How many steps to increment up or down the scale.\n///\n/// @argument {number (with unit) | list} $value [1em]\n///   The base value the scale starts at. Can also be set globally using the\n///   `modular-scale-base` key in the Bourbon settings.\n///\n/// @argument {number (unitless)} $ratio [1.25]\n///   The ratio the scale is built on. Can also be set globally using the\n///   `modular-scale-ratio` key in the Bourbon settings.\n///\n/// @return {number (with unit)}\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(2);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.5625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     margin-right: modular-scale(3, 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-right: 3.90625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(3, 1em 1.6em, $major-seventh);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 3em;\n///   }\n///\n/// @example scss\n///   // Globally change the base ratio\n///   $bourbon: (\n///     \"modular-scale-ratio\": 1.2,\n///   );\n///\n///   .element {\n///     font-size: modular-scale(3);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.728em;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n\n@function modular-scale(\n  $increment,\n  $value: _fetch-bourbon-setting(\"modular-scale-base\"),\n  $ratio: _fetch-bourbon-setting(\"modular-scale-ratio\")\n) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"@charset \"UTF-8\";\n\n/// Outputs the `overflow-wrap` property and its legacy name `word-wrap` to\n/// support browsers that do not yet use `overflow-wrap`.\n///\n/// @argument {string} $wrap [break-word]\n///   Accepted CSS values are `normal`, `break-word`, `inherit`, `initial`,\n///   or `unset`.\n///\n/// @example scss\n///   .wrapper {\n///     @include overflow-wrap;\n///   }\n///\n///   // CSS Output\n///   .wrapper {\n///     word-wrap: break-word;\n///     overflow-wrap: break-word;\n///   }\n\n@mixin overflow-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n  // stylelint-disable-next-line order/properties-alphabetical-order\n  overflow-wrap: $wrap;\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise method for targeting `padding` on specific sides of a\n/// box. Use a `null` value to “skip” a side.\n///\n/// @argument {list} $values\n///   List of padding values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element-one {\n///     @include padding(null 1rem);\n///   }\n///\n///   // CSS Output\n///   .element-one {\n///     padding-left: 1rem;\n///     padding-right: 1rem;\n///   }\n///\n/// @example scss\n///   .element-two {\n///     @include padding(10vh null 10px 5%);\n///   }\n///\n///   // CSS Output\n///   .element-two {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 10vh;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin padding($values) {\n  @include _directional-property(padding, null, $values);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting an element’s positioning\n/// properties: `position`, `top`, `right`, `bottom` and `left`. Use a `null`\n/// value to “skip” an edge of the box.\n///\n/// @argument {string} $position\n///   A CSS position value.\n///\n/// @argument {list} $box-edge-values\n///   List of lengths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include position(relative, 0 null null 10em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     left: 10em;\n///     position: relative;\n///     top: 0;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include position(absolute, 0);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     position: absolute;\n///     top: 0;\n///     right: 0;\n///     bottom: 0;\n///     left: 0;\n///   }\n///\n/// @require {function} _is-length\n///\n/// @require {function} _unpack-shorthand\n\n@mixin position(\n  $position,\n  $box-edge-values\n) {\n  $box-edge-values: _unpack-shorthand($box-edge-values);\n  $offsets: (\n    \"top\": nth($box-edge-values, 1),\n    \"right\": nth($box-edge-values, 2),\n    \"bottom\": nth($box-edge-values, 3),\n    \"left\": nth($box-edge-values, 4),\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if _is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates vendor prefixes.\n///\n/// @argument {string} $property\n///   Property to prefix.\n///\n/// @argument {string} $value\n///   Value to use.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include prefixer(appearance, none, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     -webkit-appearance: none;\n///     -moz-appearance: none;\n///     appearance: none;\n///   }\n///\n/// @author Hugo Giraudel\n\n@mixin prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{\"-\" + $prefix + \"-\" + $property}: $value;\n  }\n  #{$property}: $value;\n}\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n\n@function shade(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n      \"the `shade` mixin.\";\n  } @else {\n    @return mix(#000, $color, $percent);\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element in one statement.\n///\n/// @argument {number (with unit) | string} $width\n///\n/// @argument {number (with unit) | string} $height [$width]\n///\n/// @example scss\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   // CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n/// @example scss\n///   .second-element {\n///     @include size(auto, 10em);\n///   }\n///\n///   // CSS Output\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @require {function} _is-size\n\n@mixin size(\n  $width,\n  $height: $width\n) {\n  @if _is-size($height) {\n    height: $height;\n  } @else {\n    @error \"`#{$height}` is not a valid length for the `$height` argument \" +\n      \"in the `size` mixin.\";\n  }\n\n  @if _is-size($width) {\n    width: $width;\n  } @else {\n    @error \"`#{$width}` is not a valid length for the `$width` argument \" +\n      \"in the `size` mixin.\";\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @argument {number} $value\n///\n/// @return {number (unitless)}\n///\n/// @example scss\n///   $dimension: strip-unit(10em);\n///\n///   // Output\n///   $dimension: 10;\n\n@function strip-unit($value) {\n  @return ($value / ($value * 0 + 1));\n}\n",
		"@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_text-inputs-list\n////\n\n/// A list of all _text-based_ HTML inputs. Please note that you must\n/// interpolate the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs} {\n///     border: 1px solid #ccc;\n///   }\n///\n///   // CSS Output\n///   [type='color'],\n///   [type='date'],\n///   [type='datetime'],\n///   [type='datetime-local'],\n///   [type='email'],\n///   [type='month'],\n///   [type='number'],\n///   [type='password'],\n///   [type='search'],\n///   [type='tel'],\n///   [type='text'],\n///   [type='time'],\n///   [type='url'],\n///   [type='week'],\n///   input:not([type]),\n///   textarea {\n///     border: 1px solid #ccc;\n///   }\n\n$all-text-inputs: _assign-inputs($_text-inputs-list);\n\n/// A list of all _text-based_ HTML inputs with the `:active` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:active,\n///   [type='date']:active,\n///   [type='datetime']:active,\n///   [type='datetime-local']:active,\n///   [type='email']:active,\n///   [type='month']:active,\n///   [type='number']:active,\n///   [type='password']:active,\n///   [type='search']:active,\n///   [type='tel']:active,\n///   [type='text']:active,\n///   [type='time']:active,\n///   [type='url']:active,\n///   [type='week']:active,\n///   input:not([type]):active,\n///   textarea:active {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-active: _assign-inputs($_text-inputs-list, active);\n\n/// A list of all _text-based_ HTML inputs with the `:focus` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-focus} {\n///     border: 1px solid #1565c0;\n///   }\n///\n///   // CSS Output\n///   [type='color']:focus,\n///   [type='date']:focus,\n///   [type='datetime']:focus,\n///   [type='datetime-local']:focus,\n///   [type='email']:focus,\n///   [type='month']:focus,\n///   [type='number']:focus,\n///   [type='password']:focus,\n///   [type='search']:focus,\n///   [type='tel']:focus,\n///   [type='text']:focus,\n///   [type='time']:focus,\n///   [type='url']:focus,\n///   [type='week']:focus,\n///   input:not([type]):focus,\n///   textarea:focus {\n///     border: 1px solid #1565c0;\n///   }\n\n$all-text-inputs-focus: _assign-inputs($_text-inputs-list, focus);\n\n/// A list of all _text-based_ HTML inputs with the `:hover` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:hover,\n///   [type='date']:hover,\n///   [type='datetime']:hover,\n///   [type='datetime-local']:hover,\n///   [type='email']:hover,\n///   [type='month']:hover,\n///   [type='number']:hover,\n///   [type='password']:hover,\n///   [type='search']:hover,\n///   [type='tel']:hover,\n///   [type='text']:hover,\n///   [type='time']:hover,\n///   [type='url']:hover,\n///   [type='week']:hover,\n///   input:not([type]):hover,\n///   textarea:hover {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-hover: _assign-inputs($_text-inputs-list, hover);\n\n/// A list of all _text-based_ HTML inputs with the `:invalid` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-invalid} {\n///     border: 1px solid #00f;\n///   }\n///\n///   // CSS Output\n///   [type='color']:invalid,\n///   [type='date']:invalid,\n///   [type='datetime']:invalid,\n///   [type='datetime-local']:invalid,\n///   [type='email']:invalid,\n///   [type='month']:invalid,\n///   [type='number']:invalid,\n///   [type='password']:invalid,\n///   [type='search']:invalid,\n///   [type='tel']:invalid,\n///   [type='text']:invalid,\n///   [type='time']:invalid,\n///   [type='url']:invalid,\n///   [type='week']:invalid,\n///   input:not([type]):invalid,\n///   textarea:invalid {\n///     border: 1px solid #00f;\n///   }\n\n$all-text-inputs-invalid: _assign-inputs($_text-inputs-list, invalid);\n",
		"@charset \"UTF-8\";\n\n////\n/// CSS cubic-bezier timing functions.\n///\n/// @link https://goo.gl/p8u6SK\n///\n/// @type string\n////\n\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n\n@function tint(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n      \"the `tint` mixin.\";\n  } @else {\n    @return mix(#fff, $color, $percent);\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates a triangle pointing in a specified direction.\n///\n/// @argument {string} $direction\n///   The direction the triangle should point. Accepts `up`, `up-right`,\n///   `right`, `down-right`, `down`, `down-left`, `left` or `up-left`.\n///\n/// @argument {number (with unit)} $width\n///   Width of the triangle.\n///\n/// @argument {number (with unit)} $height\n///   Height of the triangle.\n///\n/// @argument {color} $color\n///   Color of the triangle.\n///\n/// @example scss\n///   .element {\n///     &::before {\n///       @include triangle(\"up\", 2rem, 1rem, #b25c9c);\n///       content: \"\";\n///     }\n///   }\n///\n///   // CSS Output\n///   .element::before {\n///     border-style: solid;\n///     height: 0;\n///     width: 0;\n///     border-color: transparent transparent #b25c9c;\n///     border-width: 0 1rem 1rem;\n///     content: \"\";\n///   }\n\n@mixin triangle(\n  $direction,\n  $width,\n  $height,\n  $color\n) {\n  @if not index(\n    \"up\" \"up-right\" \"right\" \"down-right\" \"down\" \"down-left\" \"left\" \"up-left\",\n    $direction\n  ) {\n    @error \"Direction must be `up`, `up-right`, `right`, `down-right`, \" +\n      \"`down`, `down-left`, `left` or `up-left`.\";\n  } @else if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n      \"the `triangle` mixin.\";\n  } @else {\n    border-style: solid;\n    height: 0;\n    width: 0;\n\n    @if $direction == \"up\" {\n      border-color: transparent transparent $color;\n      border-width: 0 ($width / 2) $height;\n    } @else if $direction == \"up-right\" {\n      border-color: transparent $color transparent transparent;\n      border-width: 0 $width $width 0;\n    } @else if $direction == \"right\" {\n      border-color: transparent transparent transparent $color;\n      border-width: ($height / 2) 0 ($height / 2) $width;\n    } @else if $direction == \"down-right\" {\n      border-color: transparent transparent $color;\n      border-width: 0 0 $width $width;\n    } @else if $direction == \"down\" {\n      border-color: $color transparent transparent;\n      border-width: $height ($width / 2) 0;\n    } @else if $direction == \"down-left\" {\n      border-color: transparent transparent transparent $color;\n      border-width: $width 0 0 $width;\n    } @else if $direction == \"left\" {\n      border-color: transparent $color transparent transparent;\n      border-width: ($height / 2) $width ($height / 2) 0;\n    } @else if $direction == \"up-left\" {\n      border-color: $color transparent transparent;\n      border-width: $width $width 0 0;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates vendor prefixes for values.\n///\n/// @argument {string} $property\n///   Property to use.\n///\n/// @argument {string} $value\n///   Value to prefix.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include value-prefixer(cursor, grab, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     cursor: -webkit-grab;\n///     cursor: -moz-grab;\n///     cursor: grab;\n///   }\n///\n/// @author Matthew Tobiasz\n\n@mixin value-prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{$property}: #{\"-\" + $prefix + \"-\" + $value};\n  }\n  #{$property}: $value;\n}\n",
		"//! 配色方案\r\n\r\n// 背景颜色\r\n$background-color-page: #fff;\r\n$background-color-head: #6699cc;\r\n$background-color-slogan: #ffffb3;\r\n\r\n// 文本颜色\r\n$text-color-body: #454545;\r\n$text-color-header: #fff;\r\n$text-color-emphasized: #f471da;\r\n$text-color-slogan-p: #7b5e37;\r\n$text-color-slogan: #8080ff;\r\n\r\n\r\n//! 字体设置\r\n$font-family-body: \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, Helvetica, sans-serif,;\r\n$font-family-slogan: \"ZcoolQingkeHuangyouTi\", \"HappyZcool-2016\", \"lianmengqiyilushuaizhengruiheiti\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, Helvetica, sans-serif,;\r\n\r\n$font-size-body: 1rem;\r\n$font-size-heading: $font-size-body * 1.2;\r\n$font-size-footer: $font-size-body * 0.9;\r\n\r\n$letter-spacing-en: 0.1em;\r\n$letter-spacing-cn: 0.2em;\r\n$letter-spacing-extra: 0.3em;\r\n\r\n$line-height-header: 3em;\r\n$line-height-footer: 1.4em;\r\n$line-height-default: 1.5em;\r\n$line-height-content: 2em;\r\n\r\n//! 布局\r\n\r\n$height-header: 4em;\r\n$height-slogan-square: 80vw;",
		"/*! 网页基本设置 */\r\n\r\n/* 所有元素：\r\n   * 外边距、内边距归零\r\n   * 边框尺寸包含内边距\r\n   * 字号默认: 100%，16px\r\n   * 字体默认: inherit\r\n   * 字间距: 0.2em\r\n   * 行高: 1.5em\r\n   * 文本对齐方式：左对齐 */\r\n   html *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n    font-size: 100%;\r\n    font-family: inherit;\r\n    color: inherit;\r\n    letter-spacing: $letter-spacing-cn;\r\n    line-height: $line-height-default;\r\n    text-align: left;\r\n    \r\n  }\r\n  \r\n  /* 全网页背景颜色：白色。\r\n  * 默认字体：微软雅黑，向后继承 */\r\n  body{\r\n    display: block;\r\n    background-color: $background-color-page;\r\n    font-family: $font-family-body;\r\n    color: $text-color-body;\r\n  }\r\n  \r\n  /* 英文字符串的字间距：0.1em */\r\n  *:lang(en){\r\n    letter-spacing: $letter-spacing-en;\r\n  }\r\n  \r\n  *:-ms-lang(en){\r\n    letter-spacing: $letter-spacing-en;\r\n  }\r\n  \r\n",
		"// 正文宽度 适屏\r\n\r\n// flex布局\r\n\r\n@mixin flexLayout($h: space-between, $v: stretch,) {\r\n  display: flex;\r\n  justify-content: $h;\r\n  align-items: $v;\r\n}  \r\n\r\n@mixin distributedLayout($margin) {\r\n  @include flexLayout;\r\n  list-style-type: none; /* 去掉<ul>默认的项目符号 */\r\n  margin: $margin 0; //定义与上下内容块的间距\r\n  li{\r\n    width: 27.5%;\r\n    &:nth-child(2){\r\n      margin: 0 5%; /* = (正文宽度 - 3×单元宽度) ÷ 2 */\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 一级容器（填充满屏背景色）\r\n\r\n.container {\r\n  width: 100%;   /* 容器宽度，确保背景颜色填充满屏幕宽度 */\r\n  @include flexLayout($h: center,);  /* 定义容器类型，并水平居中子容器 */\r\n}  \r\n\r\n.headerContainer{\r\n  @extend .container;\r\n  position: fixed;\r\n  top: 0; /* 将容器固定在屏幕顶端，否则它的起始位置默认与第一个流元素平齐 */\r\n}  \r\n\r\n.footerContainer{\r\n  @extend .container;\r\n  background-color: $background-color-head;\r\n}  \r\n\r\n.sloganContainer{\r\n  @extend .container;\r\n  $bghead: $background-color-head;\r\n  $bgslogan: $background-color-slogan;\r\n  background-image: linear-gradient($bgslogan 85%, $bghead);\r\n}  \r\n\r\n// 二级容器（正文宽度）\r\n\r\n.header{\r\n  height: $height-header;  /* 菜单栏高度，即页眉高度 */\r\n  line-height: $line-height-header;\r\n  h1 {\r\n    flex: 0 0 165px; /* 定义商标的宽度，固定不变 */\r\n    @include flexLayout($h: start, $v: center);\r\n    font-size: $font-size-body; /* h1的默认字号比正文大，将其改为正文字号 */\r\n    color: $text-color-header;\r\n    img{\r\n      height: $line-height-header;\r\n      width: auto;\r\n      margin-right: 0.5em;\r\n    }\r\n  }\r\n}  \r\n\r\n\r\n// 屏幕适配\r\n\r\n// .main类\r\n\r\n$screen-widths:\r\n  \"min\" 1440px 70% ture,\r\n  \"max\" 1440px 0.7 false,\r\n  \"max\" 1120px 0.7 false;\r\n\r\n@mixin content-width($min-or-max, $screen-width, $precentage, $isPrecentage) {\r\n  @media only screen and (#{$min-or-max}-width: $screen-width) {\r\n    // 正文宽度\r\n    .main {\r\n      @if $isPrecentage {\r\n        width: $precentage;\r\n      }\r\n      @else {\r\n        width: $screen-width * $precentage;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin sloganHeight($min-or-max, $screen-width) {\r\n  @media only screen and (#{$min-or-max}-width: $screen-width) {\r\n    height: $screen-width * 0.5;\r\n  }\r\n}\r\n\r\n// 字体\r\n\r\n.bodyFont{\r\n  font-family: $font-family-body;\r\n  font-size: $font-size-body;\r\n}\r\n\r\n@mixin font-size-slogan($min-or-max, $screen-width) {\r\n  @media only screen and (#{$min-or-max}-width: $screen-width) {\r\n    font-size: $screen-width * 0.044;\r\n  }\r\n}\r\n\r\n\r\n.sloganFont{\r\n  font-family: $font-family-slogan;\r\n  color: darken($background-color-head, 5%);\r\n  text-shadow: 2px 5px 2px #FFF;\r\n  letter-spacing: $letter-spacing-cn;\r\n  @each $min-or-max, $screen-width in $screen-widths {\r\n    @include font-size-slogan($min-or-max, $screen-width);\r\n  }\r\n}\r\n\r\n//! 图标\r\n\r\n// 服务项目的图标\r\n.icon-80{\r\n  height: 80px;\r\n  width: auto;\r\n  vertical-align: middle;\r\n}\r\n\r\n.icon-13em{\r\n  height: 1.3em;\r\n  width: auto;\r\n  vertical-align: middle;\r\n}\r\n.icon-2em{\r\n  height: 2em;\r\n  width: auto;\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n//! Slogan 背景图像\r\n\r\n%mascot {\r\n  background: {\r\n    image: url(/assets/images/mascot/Afront.png);\r\n    position: right bottom;\r\n    repeat: no-repeat;\r\n    size: 20% auto;\r\n    clip: border-box;\r\n  }\r\n}\r\n",
		"  /*! 网页页眉 */\r\n  .headerContainer{\r\n    $bgcolor: $background-color-head;\r\n    background-image: linear-gradient($bgcolor, lighten($bgcolor, 10%) 90%, $bgcolor);\r\n  }\r\n\r\n  .header {\r\n    @include flexLayout($v: center);\r\n  }\r\n\r\n  .navContainer {\r\n    flex: 0 0 350px; /* 定义主导航栏的宽度，固定不变 */\r\n    nav{\r\n      @include flexLayout;\r\n      a {\r\n        display: inline-block;\r\n        color: $text-color-header;\r\n        font-weight: bold;\r\n        text-decoration: none; /* 去掉链接文本默认的下划线 */\r\n        line-height: $line-height-header;\r\n      }\r\n    }  \r\n  }\r\n\r\n  \r\n  \r\n  \r\n",
		"//! 正文宽度及三分布局\r\n@each $min-or-max, $screen-width, $precentage, $isPrecentage in $screen-widths {\r\n  @include content-width($min-or-max, $screen-width, $precentage, $isPrecentage);\r\n}\r\n\r\n  \r\n//! Slogan 宣传语\r\n\r\n.slogan{\r\n  @each $min-or-max, $screen-width in $screen-widths {     // slogan高度设定为宽度的一半\r\n    @include sloganHeight($min-or-max, $screen-width);\r\n  }\r\n  @include flexLayout($h: start, $v: start);\r\n  padding-top: 4rem; /* 定义鹿角的上边距 */\r\n  @extend %mascot;\r\n}\r\n\r\n.sloganText{\r\n  margin-top: 1em;\r\n    h2{\r\n      margin-top: -0.2em;\r\n      margin-bottom: 0.3em; /* 定义与下方Slogan副语的间距(0.5em)，以及左侧缩进(3em)。 */\r\n      span{\r\n      font-size: 1.5em;\r\n      color: $text-color-emphasized;\r\n      padding-right: 0.1em; /* 拉开高亮文字“好”与“用”的间距 */\r\n    }\r\n  }\r\n \r\n  p{\r\n    color: $text-color-slogan-p;\r\n    text-shadow: 0px 0px 2px #FFF;\r\n    letter-spacing: $letter-spacing-extra;\r\n    line-height: $line-height-content; /* 定义Slogan副语的段落间距 */\r\n  }\r\n}\r\n  \r\n  \r\n  //! 服务范围\r\n  \r\n.services {\r\n  @include distributedLayout($margin: 100px);  \r\n\r\n  // 服务图标\r\n  h1 {\r\n    .serviceIcon{\r\n      @extend .icon-80;\r\n    }\r\n  }\r\n\r\n  // 服务名称\r\n  h2{\r\n    font-size: $font-size-heading;\r\n    margin-top: 1em; /* 定义服务图标与服务名称之间的间距 */\r\n  }  \r\n  \r\n  // 服务描述\r\n  p{\r\n    text-align:justify;\r\n    margin-top: 0.5em; /* 定义服务名称与服务描述之间的间距 */\r\n  }\r\n}\r\n\r\n\r\n",
		"  \r\n//! 页脚之上\r\n.above-footer{\r\n  margin-bottom: 1em;\r\n  p{\r\n    color: lighten($text-color-body, 40%);\r\n    line-height: $line-height-content;\r\n  }\r\n}\r\n\r\n\r\n//! 网页页脚\r\n\r\n// 页脚文本格式\r\n.footer {\r\n  @include distributedLayout($margin: 1rem);\r\n\r\n  h1{\r\n    font-size: $font-size-body;\r\n    color: lighten($background-color-head, 30%);\r\n    line-height: $line-height-content;\r\n    margin-top: 0;\r\n  }\r\n  p{\r\n    font-size: $font-size-footer;\r\n    color: lighten($background-color-head, 18%);\r\n    line-height: $line-height-footer;\r\n  }\r\n}\r\n\r\np.copyright{\r\n  font-size: $font-size-footer;\r\n  color: lighten($background-color-head, 18%);\r\n  line-height: $line-height-footer;\r\n  padding: 1rem 0;\r\n}\r\n  \r\n\r\n\r\n/* 微信二维码 */\r\n.footer .media {\r\n  position: relative;\r\n  h1{\r\n    display: inline-block;\r\n    @include margin(null 0.1em);\r\n    // margin: 0 0.1em;\r\n    &:first-child{\r\n      margin-left: 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// 将二维码定位在页脚上方\r\n\r\n.qrcode{\r\n  $bgcolor: $background-color-head;\r\n  display: none; /*! 删掉这一行，二维的码的边框就聚拢到中心了。可考虑设置在img上 */\r\n  padding: 10px 10px; /* 二维码的边框宽度 */\r\n  background-image: radial-gradient(lighten($bgcolor, 10%), darken($bgcolor, 10%));\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: -8rem;\r\n}\r\n\r\n// .platform{\r\n//   writing-mode: vertical-lr;\r\n//   line-height: 1em; /* 拉近与二维码的间距，否则距离为1.5倍行距 */\r\n//   vertical-align: middle; /* 使二维码处于顶部，并与右侧的文字一起垂直居中，否则位置会下沉 */\r\n//   position: absolute;\r\n//   top: -8rem;\r\n//   left: 180px;\r\n//   display: none;\r\n// }\r\n\r\n#icon-linkedin:hover {\r\n  padding-bottom: 0.3em;\r\n  border-bottom: 2pt solid rgba($text-color-header, 0.6);\r\n  \r\n  & ~ #qrcode-linkedin{\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n#icon-wechat:hover ~ #qrcode-wechat{\r\n  display: inline-block;\r\n}\r\n\r\n\r\n/* copyright */\r\n#copyright-2{\r\n  display: none;\r\n}\r\n\r\n"
	],
	"names": [],
	"mappings": "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"
}